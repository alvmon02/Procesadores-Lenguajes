/* AnalizadorSintacticoTinyTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTinyTokenManager.java */

/** Token Manager. */
public class AnalizadorSintacticoTinyTokenManager implements AnalizadorSintacticoTinyConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0xc000000000000L) != 0L)
            return 169;
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 33;
            return 42;
         }
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 33;
            return 52;
         }
         return -1;
      case 1:
         if ((active0 & 0x600L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
            return 69;
         }
         return -1;
      case 2:
         if ((active0 & 0x600L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 2;
            return 69;
         }
         return -1;
      case 3:
         if ((active0 & 0x600L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 3;
            return 69;
         }
         return -1;
      case 4:
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 4;
            return 69;
         }
         if ((active0 & 0x200L) != 0L)
            return 69;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_0(0x200000000000000L);
      case 37:
         return jjStopAtPos(0, 60);
      case 38:
         jjmatchedKind = 44;
         return jjMoveStringLiteralDfa1_0(0x8000000000L);
      case 40:
         return jjStopAtPos(0, 41);
      case 41:
         return jjStopAtPos(0, 42);
      case 42:
         return jjStopAtPos(0, 58);
      case 43:
         return jjStartNfaWithStates_0(0, 50, 169);
      case 44:
         return jjStopAtPos(0, 43);
      case 45:
         return jjStartNfaWithStates_0(0, 51, 169);
      case 46:
         return jjStopAtPos(0, 61);
      case 47:
         return jjStopAtPos(0, 59);
      case 59:
         return jjStopAtPos(0, 40);
      case 60:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x100000000000000L);
      case 61:
         jjmatchedKind = 49;
         return jjMoveStringLiteralDfa1_0(0x10000000000000L);
      case 62:
         jjmatchedKind = 54;
         return jjMoveStringLiteralDfa1_0(0x80000000000000L);
      case 64:
         return jjStopAtPos(0, 48);
      case 91:
         return jjStopAtPos(0, 45);
      case 93:
         return jjStopAtPos(0, 46);
      case 94:
         jjmatchedKind = 47;
         return jjMoveStringLiteralDfa1_0(0x4000000000000000L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x200L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x400L);
      case 123:
         return jjStopAtPos(0, 37);
      case 125:
         return jjStopAtPos(0, 38);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         break;
      case 46:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(1, 62);
         break;
      case 61:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         else if ((active0 & 0x80000000000000L) != 0L)
            return jjStopAtPos(1, 55);
         else if ((active0 & 0x100000000000000L) != 0L)
            return jjStopAtPos(1, 56);
         else if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(1, 57);
         break;
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x200L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x200L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(4, 9, 69);
         break;
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(5, 10, 69);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 190;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 42:
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(69); }
                  break;
               case 169:
                  if ((0x3fe000000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 48)
                     { jjCheckNAddTwoStates(174, 178); }
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     { jjCheckNAdd(170); }
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 34)
                        kind = 34;
                  }
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(69); }
                  break;
               case 0:
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     { jjCheckNAddStates(3, 6); }
                  }
                  else if ((0x100002700L & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjAddStates(7, 10); }
                  else if (curChar == 48)
                  {
                     if (kind > 34)
                        kind = 34;
                     { jjCheckNAddTwoStates(174, 178); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(71, 72); }
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar != 35)
                     break;
                  if (kind > 8)
                     kind = 8;
                  { jjCheckNAdd(2); }
                  break;
               case 2:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  { jjCheckNAdd(2); }
                  break;
               case 3:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 70:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 71:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 72:
                  if (curChar == 34 && kind > 36)
                     kind = 36;
                  break;
               case 168:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(7, 10); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  { jjCheckNAdd(170); }
                  break;
               case 171:
                  if (curChar == 48 && kind > 34)
                     kind = 34;
                  break;
               case 172:
                  if ((0x3fe000000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 175:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAdd(176); }
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAdd(176); }
                  break;
               case 177:
                  if (curChar == 48 && kind > 35)
                     kind = 35;
                  break;
               case 178:
                  if (curChar == 46)
                     { jjCheckNAddStates(11, 16); }
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(179, 180); }
                  break;
               case 180:
                  if ((0x3fe000000000000L & l) != 0L && kind > 35)
                     kind = 35;
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(181, 182); }
                  break;
               case 182:
                  if ((0x3fe000000000000L & l) != 0L)
                     { jjCheckNAdd(183); }
                  break;
               case 184:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAdd(185); }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAdd(185); }
                  break;
               case 186:
                  if (curChar == 48)
                     { jjCheckNAdd(183); }
                  break;
               case 187:
                  if (curChar == 48)
                     { jjCheckNAddTwoStates(174, 178); }
                  break;
               case 188:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  { jjCheckNAddStates(3, 6); }
                  break;
               case 189:
                  if (curChar != 48)
                     break;
                  if (kind > 34)
                     kind = 34;
                  { jjCheckNAddTwoStates(174, 178); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     { jjCheckNAdd(69); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 52:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     { jjCheckNAdd(69); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 0:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     { jjCheckNAdd(69); }
                  }
                  if (curChar == 87)
                     { jjAddStates(17, 18); }
                  else if (curChar == 119)
                     { jjAddStates(19, 20); }
                  else if (curChar == 84)
                     { jjAddStates(21, 22); }
                  else if (curChar == 116)
                     { jjAddStates(23, 24); }
                  else if (curChar == 83)
                     { jjAddStates(25, 26); }
                  else if (curChar == 115)
                     { jjAddStates(27, 28); }
                  else if (curChar == 78)
                     { jjAddStates(29, 32); }
                  else if (curChar == 110)
                     { jjAddStates(33, 36); }
                  else if (curChar == 82)
                     { jjAddStates(37, 38); }
                  else if (curChar == 114)
                     { jjAddStates(39, 40); }
                  else if (curChar == 73)
                     { jjAddStates(41, 42); }
                  else if (curChar == 105)
                     { jjAddStates(43, 44); }
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 66;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 62;
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 52;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 46;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 38;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 20;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 13;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 10;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 2:
                  if (kind > 8)
                     kind = 8;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 108 && kind > 13)
                     kind = 13;
                  break;
               case 5:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 76 && kind > 13)
                     kind = 13;
                  break;
               case 9:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 100 && kind > 14)
                     kind = 14;
                  break;
               case 13:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 68 && kind > 14)
                     kind = 14;
                  break;
               case 16:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 114 && kind > 15)
                     kind = 15;
                  break;
               case 19:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 82 && kind > 15)
                     kind = 15;
                  break;
               case 21:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101 && kind > 20)
                     kind = 20;
                  break;
               case 23:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 69 && kind > 20)
                     kind = 20;
                  break;
               case 28:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 99 && kind > 21)
                     kind = 21;
                  break;
               case 33:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 67 && kind > 21)
                     kind = 21;
                  break;
               case 37:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 101 && kind > 23)
                     kind = 23;
                  break;
               case 41:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 69 && kind > 23)
                     kind = 23;
                  break;
               case 45:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 101 && kind > 27)
                     kind = 27;
                  break;
               case 49:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 53:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 69 && kind > 27)
                     kind = 27;
                  break;
               case 55:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 108 && kind > 32)
                     kind = 32;
                  break;
               case 61:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 76 && kind > 32)
                     kind = 32;
                  break;
               case 65:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(69); }
                  break;
               case 69:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(69); }
                  break;
               case 71:
                  { jjAddStates(45, 46); }
                  break;
               case 73:
                  if (curChar == 105)
                     { jjAddStates(43, 44); }
                  break;
               case 74:
                  if (curChar == 116 && kind > 11)
                     kind = 11;
                  break;
               case 75:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 102 && kind > 22)
                     kind = 22;
                  break;
               case 77:
                  if (curChar == 73)
                     { jjAddStates(41, 42); }
                  break;
               case 78:
                  if (curChar == 84 && kind > 11)
                     kind = 11;
                  break;
               case 79:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 70 && kind > 22)
                     kind = 22;
                  break;
               case 81:
                  if (curChar == 114)
                     { jjAddStates(39, 40); }
                  break;
               case 82:
                  if (curChar == 108 && kind > 12)
                     kind = 12;
                  break;
               case 83:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 100 && kind > 28)
                     kind = 28;
                  break;
               case 86:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 82)
                     { jjAddStates(37, 38); }
                  break;
               case 89:
                  if (curChar == 76 && kind > 12)
                     kind = 12;
                  break;
               case 90:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 68 && kind > 28)
                     kind = 28;
                  break;
               case 93:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 110)
                     { jjAddStates(33, 36); }
                  break;
               case 97:
                  if (curChar == 116 && kind > 16)
                     kind = 16;
                  break;
               case 98:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 108 && kind > 18)
                     kind = 18;
                  break;
               case 100:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 119 && kind > 26)
                     kind = 26;
                  break;
               case 103:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 108 && kind > 30)
                     kind = 30;
                  break;
               case 105:
                  if (curChar == 78)
                     { jjAddStates(29, 32); }
                  break;
               case 106:
                  if (curChar == 84 && kind > 16)
                     kind = 16;
                  break;
               case 107:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 76 && kind > 18)
                     kind = 18;
                  break;
               case 109:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 87 && kind > 26)
                     kind = 26;
                  break;
               case 112:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 76 && kind > 30)
                     kind = 30;
                  break;
               case 114:
                  if (curChar == 115)
                     { jjAddStates(27, 28); }
                  break;
               case 115:
                  if (curChar == 103 && kind > 17)
                     kind = 17;
                  break;
               case 116:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 116 && kind > 25)
                     kind = 25;
                  break;
               case 121:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 83)
                     { jjAddStates(25, 26); }
                  break;
               case 126:
                  if (curChar == 71 && kind > 17)
                     kind = 17;
                  break;
               case 127:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 84 && kind > 25)
                     kind = 25;
                  break;
               case 132:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 116)
                     { jjAddStates(23, 24); }
                  break;
               case 137:
                  if (curChar == 101 && kind > 19)
                     kind = 19;
                  break;
               case 138:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 101 && kind > 31)
                     kind = 31;
                  break;
               case 141:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 84)
                     { jjAddStates(21, 22); }
                  break;
               case 144:
                  if (curChar == 69 && kind > 19)
                     kind = 19;
                  break;
               case 145:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 69 && kind > 31)
                     kind = 31;
                  break;
               case 148:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 119)
                     { jjAddStates(19, 20); }
                  break;
               case 151:
                  if (curChar == 101 && kind > 24)
                     kind = 24;
                  break;
               case 152:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 101 && kind > 29)
                     kind = 29;
                  break;
               case 156:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 87)
                     { jjAddStates(17, 18); }
                  break;
               case 160:
                  if (curChar == 69 && kind > 24)
                     kind = 24;
                  break;
               case 161:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 69 && kind > 29)
                     kind = 29;
                  break;
               case 165:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 174:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(175, 177); }
                  break;
               case 183:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAddTwoStates(184, 177); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 71:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(45, 46); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 190 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\144\157\156\144\145", 
"\145\166\141\154\165\141", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\173", "\175", "\46\46", "\73", "\50", "\51", "\54", "\46", "\133", "\135", "\136", 
"\100", "\75", "\53", "\55", "\75\75", "\74", "\76", "\76\75", "\74\75", "\41\75", 
"\52", "\57", "\45", "\56", "\136\56", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   173, 174, 178, 170, 173, 174, 178, 169, 171, 172, 187, 179, 180, 177, 181, 182, 
   186, 163, 167, 154, 158, 146, 149, 139, 142, 130, 135, 119, 124, 107, 110, 112, 
   113, 98, 101, 103, 104, 91, 95, 84, 87, 79, 80, 75, 76, 71, 72, 
};

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public AnalizadorSintacticoTinyTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public AnalizadorSintacticoTinyTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 190; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0x7ffffffffffffe01L, 
};
static final long[] jjtoSkip = {
   0x180L, 
};
static final long[] jjtoSpecial = {
   0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[190];
    private final int[] jjstateSet = new int[2 * 190];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
