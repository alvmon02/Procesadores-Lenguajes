/*
    Los posibles tipos son:
    - INT
    - REAL
    - BOOL
    - STRING
    - PUNT
    - NULL
    - ARRAY
    - STRUCT
    - OK
    - ERROR
*/

// TODO: revisar los tipos bases en los punteros y arrays. El como hacer que pueda acceder al tipo del anterior nivel, en caso de que haya punteros o arrays anidados.

busquedaCampo(idCampo, mas_cmp_s(camposs, cmp_s(tipo, id))):
    if idCampo == id then
        return tipo
    else
        return busquedaCampo(id, camposs)
    end if

busquedaCampo(idCampo, un_cmp_s(cmp_s(tipo, id))):
    if idCampo == id then
        return tipo
    else
        error("Campo no definido en el struct")
        return ERROR
    end if

ambos_ok(t0, t1):
    if t0 == OK && t1 == OK then
        return OK
    else
        return ERROR
    end if

    // Ver que sean tipos compatibles no iguales
tipo_asig(t0, t1):
    if compatibles(t0, t1) then
        return OK
    else
        aviso_error(t0, t1)
        return ERROR
    end if

aviso_error(t0, t1):
    if t0 != ERROR && t1 != ERROR then
        error("Error de tipo")
    end if

tipado(prog(decs, intrs)):
    tipado(decs)
    tipado(intrs)
    $.tipo = ambos_ok(decs.tipo, intrs.tipo)

tipado(si_decs(decs)):
    tipado(decs)
    $.tipo = decs.tipo

tipado(no_decs()):
    $.tipo = OK

tipado(mas_decs(decs, dec)):
    tipado(decs)
    tipado(dec)
    $.tipo = ambos_ok(decs.tipo, dec.tipo)

tipado(una_dec(dec)):
    tipado(dec)
    $.tipo = dec.tipo
    
tipado(dec_var(tipo, id)):
    $.tipo = OK

tipado(dec_tipo(tipo, id)):
    $.tipo = OK

tipado(dec_proc(id, pforms, prog)):
    tipado(prog)

// si_pforms(pfroms) no aplica
    
// no_pforms() no aplica

// mas_pforms(pforms, pform) no aplica

// una_pform(pform) no aplica

// pform(tipo, ref, id) no aplica

// si_ref() no aplica

// no_ref() no aplica

tipado(t_iden(id)):
    if $.vinculo.tipo == ⊥ then // Mirar que haga falta, creo que sobre todo en caso de que sea un puntero a un tipo definido despues si que habria que dejarlo
        tipado($.vinculo) 
    end if
    $.tipo = $.vinculo.tipo

tipado(t_string()):
    $.tipo = STRING

tipado(t_int()):
    $.tipo = INT

tipado(t_bool()):
    $.tipo = BOOL

tipado(t_real()):
    $.tipo = REAL

tipado(t_array(tipo, ent)):
    tipado(tipo)
    $.tipo_base = tipo.tipo
    $.tipo = ARRAY

tipado(t_punter(tipo)):
    tipado(tipo)
    $.tipo_base = tipo.tipo 
    $.tipo = PUNT

tipado(t_struct(camposs)):
    tipado(camposs)
    $.tipo = STRUCT

tipado(mas_cmp_s(camposs, campos)):
    tipado(camposs)
    tipado(campos)

tipado(un_cmp_s(campos)):
    tipado(campos)

tipado(cmp_s(tipo, id)):
    tipado(tipo)
    $.tipo = tipo.tipo

tipado(si_intrs(intrs)):
    tipado(intrs)
    $.tipo = intrs.tipo

tipado(no_intrs()):
    $.tipo = OK

tipado(mas_intrs(intrs, intr)):
    tipado(intrs)
    tipado(intr)
    $.tipo = ambos_ok(intrs.tipo, intr.tipo)

tipado(una_intr(intr)):
    tipado(intr)
    $.tipo = intr.tipo

tipado(i_eval(exp)):
    tipado(exp)
    if exp.tipo == ERROR then
        $.tipo = ERROR
    else
        $.tipo = OK
    end if

tipado(i_if(exp, prog, ielse)):
    tipado(exp)
    tipado(prog)
    tipado(ielse)
    if exp.tipo == BOOL && prog.tipo == OK && ielse.tipo == OK then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_while(exp, prog)):
    tipado(exp)
    tipado(prog)
    if exp.tipo == BOOL && prog.tipo == OK then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_read(exp)):
    tipado(exp)
    if (exp.tipo == INT || exp.tipo == REAL || exp.tipo == STRING) && exp == e_iden(_) then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_write(exp)):
    tipado(exp)
    if exp.tipo == INT || exp.tipo == REAL || exp.tipo == BOOL || exp.tipo == STRING then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_nl()):
    $.tipo = OK

tipado(i_new(exp)):
    tipado(exp)
    if exp.tipo == PUNT then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_delete(exp)):
    tipado(exp)
    if exp.tipo == PUNT then
        $.tipo = OK
    else
        $.tipo = ERROR
    end if

tipado(i_call(id, preals)):
    v = $.vinculo
    if (v == ⊥ || v != dec_proc(_,_,_)) then 
        $.tipo = ERROR
    else
        $.tipo = compatibles_preal_pform(v.pforms, preals)
    end if

compatibles_preal_pform(no_pforms(), no_preals()):
    return OK

compatibles_preal_pform(no_pforms(), si_preals(_)):
    return ERROR

compatibles_preal_pform(si_pforms(_), no_preals()):
    return ERROR

compatibles_preal_pform(si_pforms(pforms), si_preals(preals)):
    if (pforms.size() != prealss.size()) then
        return ERROR
    else
        return compatibles_preal_pform(pforms, preals)
    end if

compatibles_preal_pform(una_pform(_), mas_preals(_, _)):
    error("No coincide el numero de pforms y preals")
    return ERROR

compatibles_preal_pform(mas_pforms(_, _), una_preals(_)):
    error("No coincide el numero de pforms y preals")
    return ERROR

compatibles_preal_pform(mas_pforms(pforms, pform), mas_preals(preals, exp)):
    t0 = compatibles_preal_pform(pforms, preals)
    t1 = compatibles_preal_pform(pform, exp)
    return ambos_ok(t0, t1)

compatibles_preal_pform(una_pform(pform), una_preals(exp)):
    return compatibles_preal_pform(pform, exp)

    // TODO
compatibles_preal_pform(pform(tipo, ref, id), exp):
    tipado(exp)
    t0, t1 = ref!(exp.tipo), ref!(tipo)
    if ref == si_ref() && exp != e_iden(_) then
        error("Para pasar por referencia, el argumento tiene que ser una variable")
        return ERROR
    else if tipo_asig(t0, t1) == OK then // falta hacer tipo_asig, está arriba, pero solo comprueba si son iguales (en este caso hay que seguir las normas de las asignaciones)
        if ref == si_ref() && t1 != REAL then 
            error("El tipo de la variable a la que se le pasa por referencia tiene que coincidir con el tipo del argumento")
            return ERROR
        else
            return OK
        end if
    else
        error("El tipo del argumento tiene que ser compatible con el tipo del parametro formal")
        return ERROR
    end if

tipado(i_prog(prog)):
    tipado(prog)
    $.tipo = prog.tipo

tipado(si_else(prog)):
    tipado(prog)
    $.tipo = prog.tipo

tipado(no_else()):
    $.tipo = OK


asignable(exp):
    return exp == e_iden(_) || exp == e_campo(_, _) || exp == e_indexado(_, _) || exp == e_puntero(_)

tipado(e_asig(opnd0, opnd1)):
    tipado(opnd0)
    tipado(opnd1)
    if (asignable(exp)) && compatibles(opnd0.tipo, opnd1.tipo) then
        $.tipo = opnd0.tipo
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado_comp(opnd0, opnd1):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if ((t0 == PUNT || t0 == NULL) && (t1 == PUNT || t1 == NULL)) || (t0 == STRING && t1 == STRING) || (t0 == BOOL && t1 == BOOL) || ((t0 == INT || t0 == REAL) && (t1 == INT || t1 == REAL)) then
        $.tipo = BOOL
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado_comp_ord(opnd0, opnd1):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if (t0 == STRING && t1 == STRING) || (t0 == BOOL && t1 == BOOL) || ((t0 == INT || t0 == REAL) && (t1 == INT || t1 == REAL)) then
        $.tipo = BOOL
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_comp(opnd0, opnd1)):
    tipado_comp(opnd0, opnd1)

tipado(e_dist(opnd0, opnd1)):
    tipado_comp(opnd0, opnd1)

tipado(e_lt(opnd0, opnd1)):
    tipado_comp_ord(opnd0, opnd1)

tipado(e_gt(opnd0, opnd1)):
    tipado_comp_ord(opnd0, opnd1)

tipado(e_leq(opnd0, opnd1)):
    tipado_comp_ord(opnd0, opnd1)

tipado(e_geq(opnd0, opnd1)):
    tipado_comp_ord(opnd0, opnd1)

tipado_arit(opnd0, opnd1):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if (t0 == INT || t0 == REAL) && (t1 == INT || t1 == REAL) then
        $.tipo = (t0 == REAL || t1 == REAL) ? REAL : INT
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_suma(opnd0, opnd1)):
    tipado_arit(opnd0, opnd1)

tipado(e_resta(opnd0, opnd1)):
    tipado_arit(opnd0, opnd1)

tipado_and_or(opnd0, opnd1):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if t0 == BOOL && t1 == BOOL then
        $.tipo = BOOL
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_and(opnd0, opnd1)):
    tipado_and_or(opnd0, opnd1)

tipado(e_or(opnd0, opnd1)):
    tipado_and_or(opnd0, opnd1)

tipado(e_mul(opnd0, opnd1)):
    tipado_arit(opnd0, opnd1)

tipado(e_div(opnd0, opnd1)):
    tipado_arit(opnd0, opnd1)

tipado(e_porcentaje(opnd0, opnd1)):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if t0 == INT && t1 == INT then
        $.tipo = INT
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_negativo(opnd)):
    tipado(opnd)
    t = ref!(opnd.tipo)
    if t == INT || t == REAL then
        $.tipo = t
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_negado(opnd)):
    tipado(opnd)
    t = ref!(opnd.tipo)
    if t == BOOL then
        $.tipo = BOOL
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_indexado(opnd0, opnd1)):
    tipado(opnd0)
    tipado(opnd1)
    t0, t1 = ref!(opnd0.tipo), ref!(opnd1.tipo)
    if t0 == ARRAY && t1 == INT then
        $.tipo = t0.tipo_base
    else
        aviso_error(opnd0.tipo, opnd1.tipo)
        $.tipo = ERROR
    end if

tipado(e_campo(opnd, id)):
    tipado(opnd)
    t = ref!(opnd.tipo)
    if t != STRUCT then
        error("Se esta intentando acceder a un campo de un tipo no estructurado")
        $.tipo = ERROR
    else
        $.tipo = busquedaCampo(id, opnd.campos)
    end if

tipado(e_puntero(opnd)):
    tipado(opnd)
    t = ref!(opnd.tipo)
    if t == PUNT then
        $.tipo = opnd.tipo_base
    else
        error("Se esta intentando desreferenciar un puntero a un tipo no puntero")
        $.tipo = ERROR
    end if

tipado(e_lit_ent(num)):
    $.tipo = INT

tipado(e_lit_real(num)):
    $.tipo = REAL

tipado(e_true()):
    $.tipo = BOOL

tipado(e_false()):
    $.tipo = BOOL

tipado(e_string(string)):
    $.tipo = STRING

tipado(e_iden(id)):
    if $.vinculo != dec_var(_, _) then
        error("No es una variable")
        $.tipo = ERROR
    else
        $.tipo = $.vinculo.tipo
    end if

tipado(e_null()):
    $.tipo = NULL
// TODO revisar