var sub_pendientes=pila_vacia()
var etq_final

etiquetado(prog(bloque)):
	$.prim = etq_final
	etiquetado(bloque)
	etq_final++
	while Â¬ es_vacia(sub_pendientes)
		sub = cima(sub_pendientes)
		desapila(sub_pendientes)
		let sub = dec_proc(id, pforms, bloque2) in
			sub.prim = etq_final
			etq_final++
			recolecta_subs(pforms)
			etiquetado(bloque2)
			etq_final += 2
			sub.sig = etq_final
		end let
	end while
	$.sig = etq_final

etiquetado(bloque(decs, intrs)):
	$.prim = etq_final	
	recolecta_subs(decs)
	etiquetado(intrs)
	$.sig = etq_final

recolecta_subs(si_decs(decs)):
	recolecta_subs(decs)

recolecta_subs(no_decs()):
	noop

recolecta_subs(mas_decs(decs, dec)):
	recolecta_subs(decs)
	recolecta_subs(dec)

recolecta_subs(una_dec(dec)):
	recolecta_subs(dec)

recolecta_subs(dec_var(tipo, id)):
	noop

recolecta_subs(dec_tipo(tipo, id)):
	noop

recolecta_subs(dec_proc(id, pforms, bloque)):
	apila(sub_pendientes, $)

etiquetado(si_intrs(intrs)):
	etiquetado(intrs)

etiquetado(no_intrs()):
	noop

etiquetado(mas_intrs(intrs,intr)):
	etiquetado(intrs)
	etiquetado(intr)

etiquetado(una_intr(intr)):
	etiquetado(intr)

etiquetado(i_eval(exp)):
	etiquetado(exp)
	etq_final++

etiquetado_acc_valor(exp):
	if es_designador(exp) then
		etq_final++
	end if

etiquetado_exp(exp):
	etiquetado(exp)
	etiquetado_acc_valor(exp)

etiquetado(i_if(exp,bloque,i_else)):
	$.prim = etq_final
	etiquetado_exp(exp)
	etq_final++
	etiquetado(bloque)
	if i_else == si_else() then
		etq_final++
	end if
	$.sig = etq_final
	etiquetado(i_else)
	$.fin = etq_final

etiquetado(i_while(exp,bloque)):
	$.prim = etq_final
	etiquetado_exp(exp)
	etq_final++
	etiquetado(bloque)
	etq_final++
	$.sig = etq_final

etiquetado(i_read(exp)):
	etiquetado(exp)
	etq_final += 2

etiquetado(i_write(exp)):
	etiquetado_exp(exp)
	etq_final += 1

etiquetado(i_nl()):
	etq_final += 1

etiquetado(i_new(exp)):
	etiquetado(exp)
	etq_final += 2

etiquetado(i_delete(exp)):
	etiquetado(exp)
	etq_final += 2

etiquetado(i_call(id, preals)):
	etq_final++
	etiquetado_paso_param($.vinculo.pforms, preals)
	etq_final++


etiquetado(i_prog(bloque)):
	etiquetado(bloque)

etiquetado(si_else(bloque)):
	etiquetado(bloque)
	$.fin = etq_final

etiquetado(no_else()):
	noop

etiquetado(e_asig(opnd0, opnd1)):
	etiquetado(opnd0)
	etiquetado(opnd1)
	if opnd0.tipo == t_real() and opnd1.tipo == t_int():
		etiquetado_acc_valor(opnd1)
		etq_final++
	end if
	etq_final++

etiquetado(e_comp(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_dist(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_lt(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_gt(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_leq(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_geq(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_suma(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_resta(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_and(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_or(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_mul(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_div(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_porcentaje(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_negativo(opnd)):
	etiquetado_opnd(opnd)

etiquetado(e_negado(opnd)):
	etiquetado_opnd(opnd)

etiquetado(e_indexado(opnd0, opnd1)):
	etiquetado(opnd0)
	etiquetado_exp(opnd1)
	etq_final += 3

etiquetado(e_campo(opnd, id)):
	etiquetado(opnd)
	etq_final+=2

etiquetado(e_puntero(opnd)):
	etiquetado_exp(opnd)
	etq_final++

etiquetado(e_lit_ent(num)):
	etq_final++

etiquetado(e_lit_real(num)):
	etq_final++

etiquetado(e_true()):
	etq_final++

etiquetado(e_false()):
	etq_final++

etiquetado(e_string(string)):
	etq_final++

etiquetado(e_iden(id)):
	etiquetado_acc_id(id)

etiquetado(e_null()):
	etq_final++

//Funciones auxiliares

etiquetado_acc_id(dec_var(tipo, id)):
	if $.nivel == 0 then
		etq_final++
	else
		etq_final += 3
	end if

etiquetado_acc_id(pform(tipo, ref, id)):
	etq_final += 3
	if ref == si_ref() then:
		etq_final++
	end if

etiquetado_paso_param(proc(id, pforms, bloque), exp):
	etq_final+= 3
	etiquetado(exp)
	if ref == no_ref() and tipo == t_real() and exp.tipo == t_int():
		etq_final+=2
	end if
	etq_final++

etiquetado_opnds(opnd1,opnd2): 
	etiquetado_exp(opnd0)
	if opnd0.tipo == t_int() and opnd1.tipo == t_real() then:
		etq_final++
	end if

	etiquetado_exp(opnd1)
	if opnd0.tipo == t_real() and opnd1.tipo == t_int() then:
		etq_final++
	end if

	etq_final++

etiquetado_opnd(exp):
	etiquetado_exp(exp)
	etq_final++

etiquetado_paso_param(no_pforms(), no_preals()):
	noop

etiquetado_paso_param(si_pforms(pforms), si_preals(preals)):
	etiquetado_paso_param(pforms, preals)

etiquetado_paso_param(mas_pforms(pforms, pform), mas_preals(preals, exp)):
	etiquetado_paso_param(pforms, preals)
	etiquetado_paso_param(pform, exp)

etiquetado_paso_param(una_pform(pform), un_preals(exp)):
	etiquetado_paso_param(pform, exp)
