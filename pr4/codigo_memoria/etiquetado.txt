var sub_pendientes=pila_vacia()
var etq_final

// TODO usar funciones genericas, no repetir tanto codigo, abstraer

etiquetado(prog(bloque)):
	$.prim = etq_final
	etiquetado(bloque)
	etq_final++
	while Â¬ es_vacia(sub_pendientes)
		sub = cima(sub_pendientes)
		desapila(sub_pendientes)
		let sub = dec_proc(id, pforms, bloque2) in
			sub.prim = etq_final
			etq_final++
			recolecta_subs(pforms)
			etiquetado(bloque2)
			etq_final += 2
			sub.sig = etq_final
		end let
	end while
	$.sig = etq_final

etiquetado(bloque(decs, intrs)):
	$.prim = etq_final	
	recolecta_subs(decs)
	etiquetado(intrs)
	$.sig = etq_final

recolecta_subs(si_decs(decs)):
	recolecta_subs(decs)

recolecta_subs(no_decs()):
	noop

recolecta_subs(mas_decs(decs, dec)):
	recolecta_subs(decs)
	recolecta_subs(dec)

recolecta_subs(una_dec(dec)):
	recolecta_subs(dec)

recolecta_subs(dec_var(tipo, id)):
	noop

recolecta_subs(dec_tipo(tipo, id)):
	noop

recolecta_subs(dec_proc(id, pforms, bloque)):
	apila(sub_pendientes, $)

etiquetado(si_intrs(intrs)):
	etiquetado(intrs)

etiquetado(no_intrs()):
	noop

etiquetado(mas_intrs(intrs,intr)):
	$.prim = etq_final
	etiquetado(intrs)
	etiquetado(intr)
	$.sig = etq_final

etiquetado(una_intr(intr)):
	$.prim = etq_final
	etiquetado(intr)
	$.sig = etq_final

etiquetado(i_eval(exp)):
	$.prim = etq_final
	etiquetado(exp)
	etq_final++
	$.sig = etq_final

etiquetado(i_if(exp,bloque,i_else)):
	$.prim = etq_final
	etiquetado(exp)
	if es_designador(exp) then
		etq_final++
	end if
	etq_final++
	etiquetado(bloque)
	etq_final++
	$.sig = etq_final
	etiquetado(i_else)
	$.fin=etq_final

etiquetado(i_while(exp,bloque)):
	$.prim = etq_final
	etiquetado(exp)
	if es_designador(exp) then
		etq_final++
	end if
	etq_final++
	etiquetado(bloque)
	etq_final++
	$.sig = etq_final

etiquetado(i_read(exp)):
	$.prim = etq_final
	etiquetado(exp)
	etq_final += 2
	$.sig = etq_final

etiquetado(i_write(exp)):
	$.prim = etq_final
	etiquetado(exp)
	if es_designador(exp) then
		etq_final++
	end if
	etq_final++
	$.sig = etq_final

etiquetado(i_nl()):
	$.prim = etq_final
	etq_final++
	$.sig = etq_final

etiquetado(i_new(exp)):
	$.prim = etq_final
	etiquetado(exp)
	etq_final += 2
	$.sig = etq_final

etiquetado(i_delete(exp)):
	$.prim = etq_final
	etiquetado(exp)
	etq_final += 2
	$.sig = etq_final

etiquetado(i_call(id, preals)):
	$.prim = etq_final
	etq_final++
	etiquetado_paso_param($.vinculo.pforms, preals)
	etq_final++
	$.sig = etq_final

etiquetado_paso_param(no_pforms(), no_preals()):
	noop

etiquetado_paso_param(si_pforms(pforms), si_preals(preals)):
	etiquetado_paso_param(pforms, preals)

etiquetado_paso_param(mas_pforms(pforms, pform), mas_preals(preals, exp)):
	etiquetado_paso_param(pforms, preals)
	etiquetado_paso_param(pform, exp)

etiquetado_paso_param(una_pform(pform), un_preals(exp)):
	etiquetado_paso_param(pform, exp)

etiquetado(i_prog(bloque)):
	$.prim = etq_final
	etiquetado(bloque)
	etq_final++
	$.sig = etq_final

// TODO revisar esto
etiquetado(si_else(bloque)):
	$.prim = etq_final
	etiquetado(bloque)
	$.sig = etq_final

etiquetado(no_else()):
	noop

etiquetado(e_asig(opnd0, opnd1)):
	$.prim = etq_final
	etiquetado(opnd0)
	etiquetado(opnd1)
	if opnd0.tipo == t_real() and opnd1.tipo == t_int():
		etq_final++
	end if
	etq_final++
	$.sig = etq_final

etiquetado(e_comp(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_dist(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_lt(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_gt(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_leq(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_geq(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_suma(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_resta(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_and(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_or(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_mul(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_div(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_porcentaje(opnd0, opnd1)):
	etiquetado_opnds(opnd1,opnd2)

etiquetado(e_negativo(opnd)):
	$.prim = etq_final
	if es_designador(opnd) then
		etq_final++
	end if
	etq_final++
	$.sig = etq_final

etiquetado(e_negado(opnd)):
	$.prim = etq_final
	if es_designador(opnd) then
		etq_final++
	end if
	etq_final++
	$.sig = etq_final

etiquetado(e_campo(opnd, id)):
	$.prim = etq_final
	etiquetado(opnd)
	etq_final += 2
	$.sig = etq_final
	
etiquetado(e_puntero(opnd)):
	$.prim = etq_final
	etiquetado(opnd)
	etq_final++
	$.sig = etq_final

etiquetado(e_indexado(opnd0, opnd1)):
	$.prim =etq_final
	etiquetado(opnd0)
	etiquetado(opnd1)
	if es_designador(exp) then
		etq_final++
	end if
	etq_final+=3
	$.sig = etq_final

etiquetado(e_lit_ent(num))
	etiquetado_e():

etiquetado(e_lit_real(num))
	etiquetado_e():

etiquetado(e_true()):
	etiquetado_e():

etiquetado(e_false()):
	etiquetado_e():

etiquetado(e_string(string)):
	etiquetado_e():

etiquetado(e_iden(id)):
	$etiquetado_e():

etiquetado(e_null()):
	etiquetado_e():

//Funciones auxiliares

etiquetado_acc_id(dec_var(tipo, id)):
	if $.nivel==0 then
		etq_final++
	else
		etq_final+= 3
	end if

etiquetado_paso_param(proc(id, pforms, bloque), exp):
	etq_final+= 3
	etiquetado(exp)
	etq_final++

etiquetado_opnds(opnd1,opnd2): 
	$.prim = etq_final
	etiquetado_operands(opnd0, opnd1)
	etq_final++
	$.sig = etq_final

etiquetado_e():
	$.prim = etq_final
	etq_final++
	$.sig = etq_final

