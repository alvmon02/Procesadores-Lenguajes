var dir = 0 // primera dirección libre
var nivel = 0
var max_dir = 0 // máxima dirección ocupada


inc_dir(inc):
    dir += inc
    if dir > max_dir then
        max_dir = dir

asig-espacio(prog(decs, intrs)):
    asig-espacio(decs)
    asig-espacio(intrs)


asig-espacio(si_decs(decs)):
    asig-espacio1(decs)
    asig-espacio2(decs)

asig-espacio(no_decs()):
    noop

asig-espacio1(mas_decs(decs, dec)):
    asig-espacio1(decs)
    asig-espacio1(dec)

asig-espacio2(mas_decs(decs, dec)):
    asig-espacio2(decs)
    asig-espacio2(dec)

asig-espacio1(una_dec(dec)):
    asig-espacio1(dec)

asig-espacio2(una_dec(dec)):
    asig-espacio2(dec)

asig-espacio1(dec_var(tipo, id)):
    $.dir = dir
    $nivel = nivel
    asig-tam1(tipo)
    inc_dir(tipo.tam) //var se actualiza a la siguiente dirección libre y si se pasa de max_dir se actualiza tmb
    

asig-espacio2(dec_var(tipo, id)):
    asig-tam2(tipo)


asig-espacio1(dec_tipo(tipo, id)):
    asig-tam1(tipo)

asig-espacio2(dec_tipo(tipo, id)):
    asig-tam2(tipo)

asig-espacio1(dec_proc(id, pforms, prog)):
    dir_ant = dir       // guardamos la direccion de inicio y la max_dir
    max_dir_ant = max_dir
    nivel += 1
    $nivel = nivel
    dir = 0            // ambos se fijan a 0 porque las direcciones en el ámbito de un procedimiento son relativas a su registro de activación
    max_dir = 0
    asig-espacio(pforms)
    asig-espacio(prog)
    $tam = max_dir
    dir = dir_ant
    max_dir = max_dir_ant
    nivel -= 1


asig-espacio2(dec_proc(id, pforms, prog)):
    asig-espacio(pforms)
    asig-espacio(prog)

asig-espacio(pforms(si_pforms(pfroms))):
    asig-espacio(pforms)

asig-espacio(pforms(no_pforms())):
    noop

asig-espacio(mas_pforms(pforms, pform)):
    asig-espacio(pforms)
    asig-espacio(pform)


asig-espacio(una_pform(pform)):
    asig-espacio(pform)

asig-espacio1(t_iden(id)):
    let $.vinculo = dec_tipo(T,id) in
        $.tam = T.tam

asig-espacio2(t_iden(id)):
    noop

asig-espacio1(t_string()):
    $.tam = 1

asig-espacio2(t_string()):
    noop

asig-espacio1(t_int()):
    $.tam = 1

asig-espacio2(t_int()):
    noop

asig-espacio1(t_bool()):
    $.tam = 1

asig-espacio2(t_bool()):
    noop

asig-espacio1(t_real()):
    $.tam = 1

asig-espacio2(t_real()):
    noop

asig-espacio1(t_array(tipo, ent)):
    $.dir = dir
    asig-espacio1(tipo)
    $.tam = tipo.tam * ent
    dir+= $.tam

asig-espacio2(t_array(tipo, ent)):
    noop    // no sé si debería hacer algo aquí

asig-espacio1(t_puntero(tipo)):
    if tipo != ref(id) then
        asig-espacio1(tipo)
    end if
    $.tam = 1

asig-espacio2(t_puntero(tipo)):
    if tipo = ref(id) then 
        let tipo.vinculo = dec_tipo(T,id) in
            $.tam = T.tam
    else
        asig-espacio2(tipo)
    end if

asig-espacio(t_struct(camposs)):
    asig-espacio(camposs)

asig-espacio(mas_cmp_s(camposs, campos)):
    asig-espacio(camposs)
    asig-espacio(campos)

asig-espacio(un_cmp_s(campos)):
    asig-espacio(campos)

asig-espacio(cmp_s(tipo, id)):
    $.dir = dir
    asig-espacio1(tipo)
    $.tam = tipo.tam
    dir+= $.tam



// No necesarios
si_intrs(intrs)
no_intrs()
mas_intrs(intrs, intr)
una_intr(intr)
i_eval(exp)
i_if(exp, prog, ielse)
i_while(exp, prog)
i_read(exp)
i_write(exp)
i_nl()
i_new(exp)
i_delete(exp)
i_call(id, preals)
i_prog(prog)
si_else(prog)
no_else()
si_preals(preals)
no_preals()
mas_preals(preals, exp)
un_preals(exp)
e_asig(opnd0, opnd1)
e_comp(opnd0, opnd1)
e_dist(opnd0, opnd1)
e_lt(opnd0, opnd1)
e_gt(opnd0, opnd1)
e_leq(opnd0, opnd1)
e_geq(opnd0, opnd1)
e_suma(opnd0, opnd1)
e_resta(opnd0, opnd1)
e_and(opnd0, opnd1)
e_or(opnd0, opnd1)
e_mul(opnd0, opnd1)
e_div(opnd0, opnd1)
e_porcentaje(opnd0, opnd1)
e_negativo(opnd)
e_negado(opnd)
e_indexado(opnd0, opnd1)
e_campo(opnd, id)
e_puntero(opnd)
e_lit_ent(num)
e_lit_real(num)
e_true()
e_false()
e_string(string)
e_iden(id)
e_null()
