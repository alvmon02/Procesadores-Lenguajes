/* Generated By:JavaCC: Do not edit this line. ConstructorASTsTinyConstants.java */
package c_ast_descendente;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ConstructorASTsTinyConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int letra = 1;
  /** RegularExpression Id. */
  int digitoPositivo = 2;
  /** RegularExpression Id. */
  int digito = 3;
  /** RegularExpression Id. */
  int parteEntera = 4;
  /** RegularExpression Id. */
  int parteDecimal = 5;
  /** RegularExpression Id. */
  int parteExponencial = 6;
  /** RegularExpression Id. */
  int t_int = 9;
  /** RegularExpression Id. */
  int t_real = 10;
  /** RegularExpression Id. */
  int t_bool = 11;
  /** RegularExpression Id. */
  int and = 12;
  /** RegularExpression Id. */
  int or = 13;
  /** RegularExpression Id. */
  int NOT = 14;
  /** RegularExpression Id. */
  int t_string = 15;
  /** RegularExpression Id. */
  int nulo = 16;
  /** RegularExpression Id. */
  int t_true = 17;
  /** RegularExpression Id. */
  int t_false = 18;
  /** RegularExpression Id. */
  int proc = 19;
  /** RegularExpression Id. */
  int t_if = 20;
  /** RegularExpression Id. */
  int t_else = 21;
  /** RegularExpression Id. */
  int t_while = 22;
  /** RegularExpression Id. */
  int struct = 23;
  /** RegularExpression Id. */
  int t_new = 24;
  /** RegularExpression Id. */
  int delete = 25;
  /** RegularExpression Id. */
  int read = 26;
  /** RegularExpression Id. */
  int write = 27;
  /** RegularExpression Id. */
  int nl = 28;
  /** RegularExpression Id. */
  int type = 29;
  /** RegularExpression Id. */
  int call = 30;
  /** RegularExpression Id. */
  int iden = 31;
  /** RegularExpression Id. */
  int lit_ent = 32;
  /** RegularExpression Id. */
  int lit_real = 33;
  /** RegularExpression Id. */
  int cadena = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<letra>",
    "<digitoPositivo>",
    "<digito>",
    "<parteEntera>",
    "<parteDecimal>",
    "<parteExponencial>",
    "<token of kind 7>",
    "<token of kind 8>",
    "<t_int>",
    "<t_real>",
    "<t_bool>",
    "<and>",
    "<or>",
    "<NOT>",
    "<t_string>",
    "<nulo>",
    "<t_true>",
    "<t_false>",
    "<proc>",
    "<t_if>",
    "<t_else>",
    "<t_while>",
    "<struct>",
    "<t_new>",
    "<delete>",
    "<read>",
    "<write>",
    "<nl>",
    "<type>",
    "<call>",
    "<iden>",
    "<lit_ent>",
    "<lit_real>",
    "<cadena>",
    "\"{\"",
    "\"}\"",
    "\"&&\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"&\"",
    "\"[\"",
    "\"]\"",
    "\"^\"",
    "\"@\"",
    "\"=\"",
    "\"==\"",
    "\"<\"",
    "\">\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\".\"",
  };

}
